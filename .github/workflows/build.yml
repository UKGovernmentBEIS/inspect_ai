name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

env:
  UV_VERSION: 0.9.4

jobs:
  ruff:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v5
      - name: Lint with Ruff
        uses: astral-sh/ruff-action@v3
      - name: Format with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |-
          uv venv
          uv pip install .[dev]

      - name: Run mypy
        run: uv run mypy .

      - name: Minimize uv cache
        if: ${{ !cancelled() }}
        run: uv cache prune --ci

  pre-commit:
    runs-on: ubuntu-latest
    env:
      SKIP: "ruff"
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "${{ env.UV_VERSION }}"

      - name: Install dependencies
        run: uv pip install --system .[dev]

      - uses: pre-commit/action@v3.0.1

      - name: Minimize uv cache
        if: ${{ !cancelled() }}
        run: uv cache prune --ci

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |-
          uv venv
          uv pip install .[dev]

      - name: Test with pytest
        run: uv run pytest -rA --doctest-modules --color=yes --cov=inspect_ai

      - name: Minimize uv cache
        if: ${{ !cancelled() }}
        run: uv cache prune --ci

  package:
    name: Build & inspect the package.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

        # Without this step, the build fails due to these static assets
        # being duplicated into the `dist` folder.
      - name: Delete knowingly duplicated files
        run: rm src/inspect_ai/_view/www/favicon.svg

      - uses: hynek/build-and-inspect-python-package@v2
