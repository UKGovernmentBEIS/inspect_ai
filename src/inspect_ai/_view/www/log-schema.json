{
  "$defs": {
    "ApprovalEvent": {
      "description": "Tool approval.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "approval",
          "default": "approval",
          "enum": [
            "approval"
          ],
          "title": "Event",
          "type": "string"
        },
        "message": {
          "title": "Message",
          "type": "string"
        },
        "call": {
          "$ref": "#/$defs/ToolCall"
        },
        "view": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallView"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "approver": {
          "title": "Approver",
          "type": "string"
        },
        "decision": {
          "enum": [
            "approve",
            "modify",
            "reject",
            "escalate",
            "terminate"
          ],
          "title": "Decision",
          "type": "string"
        },
        "modified": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCall"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "explanation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Explanation"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "message",
        "call",
        "view",
        "approver",
        "decision",
        "modified",
        "explanation"
      ],
      "title": "ApprovalEvent",
      "type": "object",
      "additionalProperties": false
    },
    "ApprovalPolicyConfig": {
      "properties": {
        "approvers": {
          "items": {
            "$ref": "#/$defs/ApproverPolicyConfig"
          },
          "title": "Approvers",
          "type": "array"
        }
      },
      "required": [
        "approvers"
      ],
      "title": "ApprovalPolicyConfig",
      "type": "object",
      "additionalProperties": false
    },
    "ApproverPolicyConfig": {
      "additionalProperties": false,
      "description": "Configuration format for approver policies.\n\nFor example, here is a configuration in YAML:\n\n```yaml\napprovers:\n  - name: human\n    tools: web_browser*, bash, pyhton\n    choices: [approve, reject]\n\n  - name: auto\n    tools: *\n    decision: approve\n```",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "tools": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "Tools"
        },
        "params": {
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "name",
        "tools",
        "params"
      ],
      "title": "ApproverPolicyConfig",
      "type": "object"
    },
    "ChatCompletionChoice": {
      "properties": {
        "message": {
          "$ref": "#/$defs/ChatMessageAssistant"
        },
        "stop_reason": {
          "default": "unknown",
          "enum": [
            "stop",
            "max_tokens",
            "model_length",
            "tool_calls",
            "content_filter",
            "unknown"
          ],
          "title": "Stop Reason",
          "type": "string"
        },
        "logprobs": {
          "anyOf": [
            {
              "$ref": "#/$defs/Logprobs"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "message",
        "stop_reason",
        "logprobs"
      ],
      "title": "ChatCompletionChoice",
      "type": "object",
      "additionalProperties": false
    },
    "ChatMessageAssistant": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ContentText"
                  },
                  {
                    "$ref": "#/$defs/ContentImage"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "source": {
          "anyOf": [
            {
              "enum": [
                "input",
                "generate"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Source"
        },
        "role": {
          "const": "assistant",
          "default": "assistant",
          "enum": [
            "assistant"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolCall"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tool Calls"
        }
      },
      "required": [
        "content",
        "source",
        "role",
        "tool_calls"
      ],
      "title": "ChatMessageAssistant",
      "type": "object",
      "additionalProperties": false
    },
    "ChatMessageSystem": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ContentText"
                  },
                  {
                    "$ref": "#/$defs/ContentImage"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "source": {
          "anyOf": [
            {
              "enum": [
                "input",
                "generate"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Source"
        },
        "role": {
          "const": "system",
          "default": "system",
          "enum": [
            "system"
          ],
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "content",
        "source",
        "role"
      ],
      "title": "ChatMessageSystem",
      "type": "object",
      "additionalProperties": false
    },
    "ChatMessageTool": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ContentText"
                  },
                  {
                    "$ref": "#/$defs/ContentImage"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "source": {
          "anyOf": [
            {
              "enum": [
                "input",
                "generate"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Source"
        },
        "role": {
          "const": "tool",
          "default": "tool",
          "enum": [
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tool Call Id"
        },
        "function": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Function"
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "content",
        "source",
        "role",
        "tool_call_id",
        "function",
        "error"
      ],
      "title": "ChatMessageTool",
      "type": "object",
      "additionalProperties": false
    },
    "ChatMessageUser": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ContentText"
                  },
                  {
                    "$ref": "#/$defs/ContentImage"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "source": {
          "anyOf": [
            {
              "enum": [
                "input",
                "generate"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Source"
        },
        "role": {
          "const": "user",
          "default": "user",
          "enum": [
            "user"
          ],
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "content",
        "source",
        "role"
      ],
      "title": "ChatMessageUser",
      "type": "object",
      "additionalProperties": false
    },
    "ContentImage": {
      "properties": {
        "type": {
          "const": "image",
          "default": "image",
          "enum": [
            "image"
          ],
          "title": "Type",
          "type": "string"
        },
        "image": {
          "title": "Image",
          "type": "string"
        },
        "detail": {
          "default": "auto",
          "enum": [
            "auto",
            "low",
            "high"
          ],
          "title": "Detail",
          "type": "string"
        }
      },
      "required": [
        "type",
        "image",
        "detail"
      ],
      "title": "ContentImage",
      "type": "object",
      "additionalProperties": false
    },
    "ContentText": {
      "properties": {
        "type": {
          "const": "text",
          "default": "text",
          "enum": [
            "text"
          ],
          "title": "Type",
          "type": "string"
        },
        "text": {
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "type",
        "text"
      ],
      "title": "ContentText",
      "type": "object",
      "additionalProperties": false
    },
    "ErrorEvent": {
      "description": "Event with sample error.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "error",
          "default": "error",
          "enum": [
            "error"
          ],
          "title": "Event",
          "type": "string"
        },
        "error": {
          "$ref": "#/$defs/EvalError"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "error"
      ],
      "title": "ErrorEvent",
      "type": "object",
      "additionalProperties": false
    },
    "EvalConfig": {
      "properties": {
        "limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "maxItems": 2,
              "minItems": 2,
              "prefixItems": [
                {
                  "type": "integer"
                },
                {
                  "type": "integer"
                }
              ],
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Limit"
        },
        "epochs": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Epochs"
        },
        "epochs_reducer": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Epochs Reducer"
        },
        "trace": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Trace"
        },
        "approval": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApprovalPolicyConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "fail_on_error": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fail On Error"
        },
        "message_limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Message Limit"
        },
        "token_limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Token Limit"
        },
        "time_limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Time Limit"
        },
        "max_samples": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Samples"
        },
        "max_tasks": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Tasks"
        },
        "max_subprocesses": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Subprocesses"
        },
        "sandbox_cleanup": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sandbox Cleanup"
        },
        "log_samples": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Log Samples"
        },
        "log_images": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Log Images"
        },
        "log_buffer": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Log Buffer"
        }
      },
      "title": "EvalConfig",
      "type": "object",
      "required": [
        "limit",
        "epochs",
        "epochs_reducer",
        "trace",
        "approval",
        "fail_on_error",
        "message_limit",
        "token_limit",
        "time_limit",
        "max_samples",
        "max_tasks",
        "max_subprocesses",
        "sandbox_cleanup",
        "log_samples",
        "log_images",
        "log_buffer"
      ],
      "additionalProperties": false
    },
    "EvalDataset": {
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "location": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Location"
        },
        "samples": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Samples"
        },
        "sample_ids": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sample Ids"
        },
        "shuffled": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shuffled"
        }
      },
      "title": "EvalDataset",
      "type": "object",
      "required": [
        "name",
        "location",
        "samples",
        "sample_ids",
        "shuffled"
      ],
      "additionalProperties": false
    },
    "EvalError": {
      "properties": {
        "message": {
          "title": "Message",
          "type": "string"
        },
        "traceback": {
          "title": "Traceback",
          "type": "string"
        },
        "traceback_ansi": {
          "title": "Traceback Ansi",
          "type": "string"
        }
      },
      "required": [
        "message",
        "traceback",
        "traceback_ansi"
      ],
      "title": "EvalError",
      "type": "object",
      "additionalProperties": false
    },
    "EvalMetric": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "number"
            }
          ],
          "title": "Value"
        },
        "options": {
          "title": "Options",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "name",
        "value",
        "options",
        "metadata"
      ],
      "title": "EvalMetric",
      "type": "object",
      "additionalProperties": false
    },
    "EvalPlan": {
      "properties": {
        "name": {
          "default": "plan",
          "title": "Name",
          "type": "string"
        },
        "steps": {
          "default": [],
          "items": {
            "$ref": "#/$defs/EvalPlanStep"
          },
          "title": "Steps",
          "type": "array"
        },
        "finish": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvalPlanStep"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "config": {
          "$ref": "#/$defs/GenerateConfig",
          "default": {
            "max_retries": null,
            "timeout": null,
            "max_connections": null,
            "system_message": null,
            "max_tokens": null,
            "top_p": null,
            "temperature": null,
            "stop_seqs": null,
            "best_of": null,
            "frequency_penalty": null,
            "presence_penalty": null,
            "logit_bias": null,
            "seed": null,
            "suffix": null,
            "top_k": null,
            "num_choices": null,
            "logprobs": null,
            "top_logprobs": null,
            "parallel_tool_calls": null,
            "max_tool_output": null,
            "cache_prompt": null
          }
        }
      },
      "title": "EvalPlan",
      "type": "object",
      "required": [
        "name",
        "steps",
        "finish",
        "config"
      ],
      "additionalProperties": false
    },
    "EvalPlanStep": {
      "properties": {
        "solver": {
          "title": "Solver",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "object"
        }
      },
      "required": [
        "solver",
        "params"
      ],
      "title": "EvalPlanStep",
      "type": "object",
      "additionalProperties": false
    },
    "EvalResults": {
      "properties": {
        "total_samples": {
          "default": 0,
          "title": "Total Samples",
          "type": "integer"
        },
        "completed_samples": {
          "default": 0,
          "title": "Completed Samples",
          "type": "integer"
        },
        "scores": {
          "default": [],
          "items": {
            "$ref": "#/$defs/EvalScore"
          },
          "title": "Scores",
          "type": "array"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "title": "EvalResults",
      "type": "object",
      "required": [
        "total_samples",
        "completed_samples",
        "scores",
        "metadata"
      ],
      "additionalProperties": false
    },
    "EvalRevision": {
      "properties": {
        "type": {
          "const": "git",
          "enum": [
            "git"
          ],
          "title": "Type",
          "type": "string"
        },
        "origin": {
          "title": "Origin",
          "type": "string"
        },
        "commit": {
          "title": "Commit",
          "type": "string"
        }
      },
      "required": [
        "type",
        "origin",
        "commit"
      ],
      "title": "EvalRevision",
      "type": "object",
      "additionalProperties": false
    },
    "EvalSample": {
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "title": "Id"
        },
        "epoch": {
          "title": "Epoch",
          "type": "integer"
        },
        "input": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChatMessageSystem"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageUser"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageAssistant"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageTool"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Input"
        },
        "choices": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Choices"
        },
        "target": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "Target"
        },
        "sandbox": {
          "anyOf": [
            {
              "$ref": "#/$defs/SandboxEnvironmentSpec"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "files": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Files"
        },
        "setup": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Setup"
        },
        "messages": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ChatMessageSystem"
              },
              {
                "$ref": "#/$defs/ChatMessageUser"
              },
              {
                "$ref": "#/$defs/ChatMessageAssistant"
              },
              {
                "$ref": "#/$defs/ChatMessageTool"
              }
            ]
          },
          "title": "Messages",
          "type": "array"
        },
        "output": {
          "$ref": "#/$defs/ModelOutput"
        },
        "scores": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/Score"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scores"
        },
        "metadata": {
          "title": "Metadata",
          "type": "object"
        },
        "store": {
          "title": "Store",
          "type": "object"
        },
        "events": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SampleInitEvent"
              },
              {
                "$ref": "#/$defs/SampleLimitEvent"
              },
              {
                "$ref": "#/$defs/StateEvent"
              },
              {
                "$ref": "#/$defs/StoreEvent"
              },
              {
                "$ref": "#/$defs/ModelEvent"
              },
              {
                "$ref": "#/$defs/ToolEvent"
              },
              {
                "$ref": "#/$defs/ApprovalEvent"
              },
              {
                "$ref": "#/$defs/InputEvent"
              },
              {
                "$ref": "#/$defs/ScoreEvent"
              },
              {
                "$ref": "#/$defs/ErrorEvent"
              },
              {
                "$ref": "#/$defs/LoggerEvent"
              },
              {
                "$ref": "#/$defs/InfoEvent"
              },
              {
                "$ref": "#/$defs/StepEvent"
              },
              {
                "$ref": "#/$defs/SubtaskEvent"
              }
            ]
          },
          "title": "Events",
          "type": "array"
        },
        "model_usage": {
          "additionalProperties": {
            "$ref": "#/$defs/ModelUsage"
          },
          "title": "Model Usage",
          "type": "object"
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvalError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "attachments": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attachments",
          "type": "object"
        },
        "limit": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvalSampleLimit"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "id",
        "epoch",
        "input",
        "choices",
        "target",
        "sandbox",
        "files",
        "setup",
        "messages",
        "output",
        "scores",
        "metadata",
        "store",
        "events",
        "model_usage",
        "error",
        "attachments",
        "limit"
      ],
      "title": "EvalSample",
      "type": "object",
      "additionalProperties": false
    },
    "EvalSampleLimit": {
      "properties": {
        "type": {
          "enum": [
            "context",
            "time",
            "message",
            "token",
            "operator"
          ],
          "title": "Type",
          "type": "string"
        },
        "limit": {
          "title": "Limit",
          "type": "integer"
        }
      },
      "required": [
        "type",
        "limit"
      ],
      "title": "EvalSampleLimit",
      "type": "object",
      "additionalProperties": false
    },
    "EvalSampleReductions": {
      "properties": {
        "scorer": {
          "title": "Scorer",
          "type": "string"
        },
        "reducer": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reducer"
        },
        "samples": {
          "items": {
            "$ref": "#/$defs/SampleScore"
          },
          "title": "Samples",
          "type": "array"
        }
      },
      "required": [
        "scorer",
        "reducer",
        "samples"
      ],
      "title": "EvalSampleReductions",
      "type": "object",
      "additionalProperties": false
    },
    "EvalScore": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "scorer": {
          "title": "Scorer",
          "type": "string"
        },
        "reducer": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reducer"
        },
        "params": {
          "title": "Params",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": {
            "$ref": "#/$defs/EvalMetric"
          },
          "title": "Metrics",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "name",
        "scorer",
        "reducer",
        "params",
        "metrics",
        "metadata"
      ],
      "title": "EvalScore",
      "type": "object",
      "additionalProperties": false
    },
    "EvalSpec": {
      "properties": {
        "run_id": {
          "title": "Run Id",
          "type": "string"
        },
        "created": {
          "title": "Created",
          "type": "string"
        },
        "task": {
          "title": "Task",
          "type": "string"
        },
        "task_id": {
          "title": "Task Id",
          "type": "string"
        },
        "task_version": {
          "default": 0,
          "title": "Task Version",
          "type": "integer"
        },
        "task_file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Task File"
        },
        "task_attribs": {
          "title": "Task Attribs",
          "type": "object"
        },
        "task_args": {
          "title": "Task Args",
          "type": "object"
        },
        "solver": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solver"
        },
        "solver_args": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solver Args"
        },
        "tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "dataset": {
          "$ref": "#/$defs/EvalDataset"
        },
        "sandbox": {
          "anyOf": [
            {
              "$ref": "#/$defs/SandboxEnvironmentSpec"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "model": {
          "title": "Model",
          "type": "string"
        },
        "model_base_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Model Base Url"
        },
        "model_args": {
          "title": "Model Args",
          "type": "object"
        },
        "config": {
          "$ref": "#/$defs/EvalConfig"
        },
        "revision": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvalRevision"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "packages": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Packages",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "run_id",
        "created",
        "task",
        "task_id",
        "task_version",
        "task_file",
        "task_attribs",
        "task_args",
        "solver",
        "solver_args",
        "tags",
        "dataset",
        "sandbox",
        "model",
        "model_base_url",
        "model_args",
        "config",
        "revision",
        "packages",
        "metadata"
      ],
      "title": "EvalSpec",
      "type": "object",
      "additionalProperties": false
    },
    "EvalStats": {
      "properties": {
        "started_at": {
          "title": "Started At",
          "type": "string"
        },
        "completed_at": {
          "title": "Completed At",
          "type": "string"
        },
        "model_usage": {
          "additionalProperties": {
            "$ref": "#/$defs/ModelUsage"
          },
          "title": "Model Usage",
          "type": "object"
        }
      },
      "title": "EvalStats",
      "type": "object",
      "required": [
        "started_at",
        "completed_at",
        "model_usage"
      ],
      "additionalProperties": false
    },
    "GenerateConfig": {
      "description": "Base class for model generation configs.",
      "properties": {
        "max_retries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Retries"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timeout"
        },
        "max_connections": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Connections"
        },
        "system_message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "System Message"
        },
        "max_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Tokens"
        },
        "top_p": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Top P"
        },
        "temperature": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Temperature"
        },
        "stop_seqs": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stop Seqs"
        },
        "best_of": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Best Of"
        },
        "frequency_penalty": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frequency Penalty"
        },
        "presence_penalty": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Presence Penalty"
        },
        "logit_bias": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Logit Bias"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "suffix": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Suffix"
        },
        "top_k": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Top K"
        },
        "num_choices": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Num Choices"
        },
        "logprobs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Logprobs"
        },
        "top_logprobs": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Top Logprobs"
        },
        "parallel_tool_calls": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Parallel Tool Calls"
        },
        "max_tool_output": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Tool Output"
        },
        "cache_prompt": {
          "anyOf": [
            {
              "const": "auto",
              "enum": [
                "auto"
              ],
              "type": "string"
            },
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cache Prompt"
        }
      },
      "title": "GenerateConfig",
      "type": "object",
      "required": [
        "max_retries",
        "timeout",
        "max_connections",
        "system_message",
        "max_tokens",
        "top_p",
        "temperature",
        "stop_seqs",
        "best_of",
        "frequency_penalty",
        "presence_penalty",
        "logit_bias",
        "seed",
        "suffix",
        "top_k",
        "num_choices",
        "logprobs",
        "top_logprobs",
        "parallel_tool_calls",
        "max_tool_output",
        "cache_prompt"
      ],
      "additionalProperties": false
    },
    "InfoEvent": {
      "description": "Event with custom info/data.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "info",
          "default": "info",
          "enum": [
            "info"
          ],
          "title": "Event",
          "type": "string"
        },
        "data": {
          "$ref": "#/$defs/JsonValue"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "data"
      ],
      "title": "InfoEvent",
      "type": "object",
      "additionalProperties": false
    },
    "InputEvent": {
      "description": "Input screen interaction.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "input",
          "default": "input",
          "enum": [
            "input"
          ],
          "title": "Event",
          "type": "string"
        },
        "input": {
          "title": "Input",
          "type": "string"
        },
        "input_ansi": {
          "title": "Input Ansi",
          "type": "string"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "input",
        "input_ansi"
      ],
      "title": "InputEvent",
      "type": "object",
      "additionalProperties": false
    },
    "JsonChange": {
      "description": "Describes a change to data using JSON Patch format.",
      "properties": {
        "op": {
          "enum": [
            "remove",
            "add",
            "replace",
            "move",
            "test",
            "copy"
          ],
          "title": "Op",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "type": "string"
        },
        "from": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "From"
        },
        "value": {
          "$ref": "#/$defs/JsonValue",
          "default": null
        },
        "replaced": {
          "$ref": "#/$defs/JsonValue",
          "default": null
        }
      },
      "required": [
        "op",
        "path",
        "from",
        "value",
        "replaced"
      ],
      "title": "JsonChange",
      "type": "object",
      "additionalProperties": false
    },
    "JsonValue": {},
    "LoggerEvent": {
      "description": "Log message recorded with Python logger.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "logger",
          "default": "logger",
          "enum": [
            "logger"
          ],
          "title": "Event",
          "type": "string"
        },
        "message": {
          "$ref": "#/$defs/LoggingMessage"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "message"
      ],
      "title": "LoggerEvent",
      "type": "object",
      "additionalProperties": false
    },
    "LoggingMessage": {
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "level": {
          "enum": [
            "debug",
            "http",
            "sandbox",
            "info",
            "warning",
            "error",
            "critical"
          ],
          "title": "Level",
          "type": "string"
        },
        "message": {
          "title": "Message",
          "type": "string"
        },
        "created": {
          "title": "Created",
          "type": "number"
        },
        "filename": {
          "default": "unknown",
          "title": "Filename",
          "type": "string"
        },
        "module": {
          "default": "unknown",
          "title": "Module",
          "type": "string"
        },
        "lineno": {
          "default": 0,
          "title": "Lineno",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "level",
        "message",
        "created",
        "filename",
        "module",
        "lineno"
      ],
      "title": "LoggingMessage",
      "type": "object",
      "additionalProperties": false
    },
    "Logprob": {
      "description": "Log probability for a token.",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string"
        },
        "logprob": {
          "title": "Logprob",
          "type": "number"
        },
        "bytes": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bytes"
        },
        "top_logprobs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/TopLogprob"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Top Logprobs"
        }
      },
      "required": [
        "token",
        "logprob",
        "bytes",
        "top_logprobs"
      ],
      "title": "Logprob",
      "type": "object",
      "additionalProperties": false
    },
    "Logprobs": {
      "description": "Log probability information for a completion choice.",
      "properties": {
        "content": {
          "items": {
            "$ref": "#/$defs/Logprob"
          },
          "title": "Content",
          "type": "array"
        }
      },
      "required": [
        "content"
      ],
      "title": "Logprobs",
      "type": "object",
      "additionalProperties": false
    },
    "ModelCall": {
      "description": "Model call (raw request/response data).",
      "properties": {
        "request": {
          "additionalProperties": {
            "$ref": "#/$defs/JsonValue"
          },
          "title": "Request",
          "type": "object"
        },
        "response": {
          "additionalProperties": {
            "$ref": "#/$defs/JsonValue"
          },
          "title": "Response",
          "type": "object"
        }
      },
      "required": [
        "request",
        "response"
      ],
      "title": "ModelCall",
      "type": "object",
      "additionalProperties": false
    },
    "ModelEvent": {
      "description": "Call to a language model.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "model",
          "default": "model",
          "enum": [
            "model"
          ],
          "title": "Event",
          "type": "string"
        },
        "model": {
          "title": "Model",
          "type": "string"
        },
        "input": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ChatMessageSystem"
              },
              {
                "$ref": "#/$defs/ChatMessageUser"
              },
              {
                "$ref": "#/$defs/ChatMessageAssistant"
              },
              {
                "$ref": "#/$defs/ChatMessageTool"
              }
            ]
          },
          "title": "Input",
          "type": "array"
        },
        "tools": {
          "items": {
            "$ref": "#/$defs/ToolInfo"
          },
          "title": "Tools",
          "type": "array"
        },
        "tool_choice": {
          "anyOf": [
            {
              "enum": [
                "auto",
                "any",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "#/$defs/ToolFunction"
            }
          ],
          "title": "Tool Choice"
        },
        "config": {
          "$ref": "#/$defs/GenerateConfig"
        },
        "output": {
          "$ref": "#/$defs/ModelOutput"
        },
        "cache": {
          "anyOf": [
            {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cache"
        },
        "call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModelCall"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "model",
        "input",
        "tools",
        "tool_choice",
        "config",
        "output",
        "cache",
        "call"
      ],
      "title": "ModelEvent",
      "type": "object",
      "additionalProperties": false
    },
    "ModelOutput": {
      "properties": {
        "model": {
          "title": "Model",
          "type": "string"
        },
        "choices": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChatCompletionChoice"
          },
          "title": "Choices",
          "type": "array"
        },
        "usage": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModelUsage"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        },
        "error": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Error"
        }
      },
      "title": "ModelOutput",
      "type": "object",
      "required": [
        "model",
        "choices",
        "usage",
        "metadata",
        "error"
      ],
      "additionalProperties": false
    },
    "ModelUsage": {
      "properties": {
        "input_tokens": {
          "default": 0,
          "title": "Input Tokens",
          "type": "integer"
        },
        "output_tokens": {
          "default": 0,
          "title": "Output Tokens",
          "type": "integer"
        },
        "total_tokens": {
          "default": 0,
          "title": "Total Tokens",
          "type": "integer"
        },
        "input_tokens_cache_write": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Input Tokens Cache Write"
        },
        "input_tokens_cache_read": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Input Tokens Cache Read"
        }
      },
      "title": "ModelUsage",
      "type": "object",
      "required": [
        "input_tokens",
        "output_tokens",
        "total_tokens",
        "input_tokens_cache_write",
        "input_tokens_cache_read"
      ],
      "additionalProperties": false
    },
    "Sample": {
      "properties": {
        "input": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChatMessageSystem"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageUser"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageAssistant"
                  },
                  {
                    "$ref": "#/$defs/ChatMessageTool"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Input"
        },
        "choices": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Choices"
        },
        "target": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "Target"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        },
        "sandbox": {
          "anyOf": [
            {
              "$ref": "#/$defs/SandboxEnvironmentSpec"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "files": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Files"
        },
        "setup": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Setup"
        }
      },
      "required": [
        "input",
        "choices",
        "target",
        "id",
        "metadata",
        "sandbox",
        "files",
        "setup"
      ],
      "title": "Sample",
      "type": "object",
      "additionalProperties": false
    },
    "SampleInitEvent": {
      "description": "Beginning of processing a Sample.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "sample_init",
          "default": "sample_init",
          "enum": [
            "sample_init"
          ],
          "title": "Event",
          "type": "string"
        },
        "sample": {
          "$ref": "#/$defs/Sample"
        },
        "state": {
          "$ref": "#/$defs/JsonValue"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "sample",
        "state"
      ],
      "title": "SampleInitEvent",
      "type": "object",
      "additionalProperties": false
    },
    "SampleLimitEvent": {
      "description": "The sample was unable to finish processing due to a limit",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "sample_limit",
          "default": "sample_limit",
          "enum": [
            "sample_limit"
          ],
          "title": "Event",
          "type": "string"
        },
        "type": {
          "enum": [
            "message",
            "time",
            "token",
            "operator"
          ],
          "title": "Type",
          "type": "string"
        },
        "message": {
          "title": "Message",
          "type": "string"
        },
        "limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Limit"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "type",
        "message",
        "limit"
      ],
      "title": "SampleLimitEvent",
      "type": "object",
      "additionalProperties": false
    },
    "SampleScore": {
      "description": "Score for a Sample\n\nArgs:\n   sample_id: (str | int | None) Unique id of a sample",
      "properties": {
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "object"
            }
          ],
          "title": "Value"
        },
        "answer": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Answer"
        },
        "explanation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Explanation"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        },
        "sample_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sample Id"
        }
      },
      "required": [
        "value",
        "answer",
        "explanation",
        "metadata",
        "sample_id"
      ],
      "title": "SampleScore",
      "type": "object",
      "additionalProperties": false
    },
    "SandboxEnvironmentSpec": {
      "maxItems": 2,
      "minItems": 1,
      "prefixItems": [
        {
          "title": "Type",
          "type": "string"
        },
        {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Config"
        }
      ],
      "type": "array"
    },
    "Score": {
      "description": "Score generated by a scorer.\n\nArgs:\n   value (Value): Score value.\n   answer (str | None): Answer extracted from model output (optional).\n   explanation (str | None): Explanation of score (optional).\n   metadata (dict[str,Any]): Additional metadata related to the score.",
      "properties": {
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "object"
            }
          ],
          "title": "Value"
        },
        "answer": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Answer"
        },
        "explanation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Explanation"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "value",
        "answer",
        "explanation",
        "metadata"
      ],
      "title": "Score",
      "type": "object",
      "additionalProperties": false
    },
    "ScoreEvent": {
      "description": "Event with sample score.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "score",
          "default": "score",
          "enum": [
            "score"
          ],
          "title": "Event",
          "type": "string"
        },
        "score": {
          "$ref": "#/$defs/Score"
        },
        "target": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Target"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "score",
        "target"
      ],
      "title": "ScoreEvent",
      "type": "object",
      "additionalProperties": false
    },
    "StateEvent": {
      "description": "Change to the current `TaskState`",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "state",
          "default": "state",
          "enum": [
            "state"
          ],
          "title": "Event",
          "type": "string"
        },
        "changes": {
          "items": {
            "$ref": "#/$defs/JsonChange"
          },
          "title": "Changes",
          "type": "array"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "changes"
      ],
      "title": "StateEvent",
      "type": "object",
      "additionalProperties": false
    },
    "StepEvent": {
      "description": "Step within current sample or subtask.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "step",
          "default": "step",
          "enum": [
            "step"
          ],
          "title": "Event",
          "type": "string"
        },
        "action": {
          "enum": [
            "begin",
            "end"
          ],
          "title": "Action",
          "type": "string"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Type"
        },
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "action",
        "type",
        "name"
      ],
      "title": "StepEvent",
      "type": "object",
      "additionalProperties": false
    },
    "StoreEvent": {
      "description": "Change to data within the current `Store`.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "store",
          "default": "store",
          "enum": [
            "store"
          ],
          "title": "Event",
          "type": "string"
        },
        "changes": {
          "items": {
            "$ref": "#/$defs/JsonChange"
          },
          "title": "Changes",
          "type": "array"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "changes"
      ],
      "title": "StoreEvent",
      "type": "object",
      "additionalProperties": false
    },
    "SubtaskEvent": {
      "description": "Subtask spawned.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "subtask",
          "default": "subtask",
          "enum": [
            "subtask"
          ],
          "title": "Event",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Type"
        },
        "input": {
          "title": "Input",
          "type": "object"
        },
        "result": {
          "default": null,
          "title": "Result"
        },
        "events": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SampleInitEvent"
              },
              {
                "$ref": "#/$defs/SampleLimitEvent"
              },
              {
                "$ref": "#/$defs/StateEvent"
              },
              {
                "$ref": "#/$defs/StoreEvent"
              },
              {
                "$ref": "#/$defs/ModelEvent"
              },
              {
                "$ref": "#/$defs/ToolEvent"
              },
              {
                "$ref": "#/$defs/ApprovalEvent"
              },
              {
                "$ref": "#/$defs/InputEvent"
              },
              {
                "$ref": "#/$defs/ScoreEvent"
              },
              {
                "$ref": "#/$defs/ErrorEvent"
              },
              {
                "$ref": "#/$defs/LoggerEvent"
              },
              {
                "$ref": "#/$defs/InfoEvent"
              },
              {
                "$ref": "#/$defs/StepEvent"
              },
              {
                "$ref": "#/$defs/SubtaskEvent"
              }
            ]
          },
          "title": "Events",
          "type": "array"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "name",
        "type",
        "input",
        "result",
        "events"
      ],
      "title": "SubtaskEvent",
      "type": "object",
      "additionalProperties": false
    },
    "ToolCall": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "string"
        },
        "arguments": {
          "title": "Arguments",
          "type": "object"
        },
        "type": {
          "const": "function",
          "enum": [
            "function"
          ],
          "title": "Type",
          "type": "string"
        },
        "parse_error": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Parse Error"
        },
        "view": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "id",
        "function",
        "arguments",
        "type",
        "parse_error",
        "view"
      ],
      "title": "ToolCall",
      "type": "object",
      "additionalProperties": false
    },
    "ToolCallContent": {
      "description": "Content to include in tool call view.",
      "properties": {
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Title"
        },
        "format": {
          "enum": [
            "text",
            "markdown"
          ],
          "title": "Format",
          "type": "string"
        },
        "content": {
          "title": "Content",
          "type": "string"
        }
      },
      "required": [
        "title",
        "format",
        "content"
      ],
      "title": "ToolCallContent",
      "type": "object",
      "additionalProperties": false
    },
    "ToolCallError": {
      "properties": {
        "type": {
          "enum": [
            "parsing",
            "timeout",
            "unicode_decode",
            "permission",
            "file_not_found",
            "is_a_directory",
            "output_limit",
            "approval",
            "unknown"
          ],
          "title": "Type",
          "type": "string"
        },
        "message": {
          "title": "Message",
          "type": "string"
        }
      },
      "required": [
        "type",
        "message"
      ],
      "title": "ToolCallError",
      "type": "object",
      "additionalProperties": false
    },
    "ToolCallView": {
      "description": "Custom view of a tool call.\n\nBoth `context` and `call` are optional. If `call` is not specified\nthen the view will default to a syntax highlighted Python function call.",
      "properties": {
        "context": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "ToolCallView",
      "type": "object",
      "required": [
        "context",
        "call"
      ],
      "additionalProperties": false
    },
    "ToolEvent": {
      "description": "Call to a tool.",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "pending": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pending"
        },
        "event": {
          "const": "tool",
          "default": "tool",
          "enum": [
            "tool"
          ],
          "title": "Event",
          "type": "string"
        },
        "type": {
          "const": "function",
          "default": "function",
          "enum": [
            "function"
          ],
          "title": "Type",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "string"
        },
        "arguments": {
          "additionalProperties": {
            "$ref": "#/$defs/JsonValue"
          },
          "title": "Arguments",
          "type": "object"
        },
        "view": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "result": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ContentText"
                  },
                  {
                    "$ref": "#/$defs/ContentImage"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Result"
        },
        "truncated": {
          "anyOf": [
            {
              "maxItems": 2,
              "minItems": 2,
              "prefixItems": [
                {
                  "type": "integer"
                },
                {
                  "type": "integer"
                }
              ],
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Truncated"
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "events": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SampleInitEvent"
              },
              {
                "$ref": "#/$defs/SampleLimitEvent"
              },
              {
                "$ref": "#/$defs/StateEvent"
              },
              {
                "$ref": "#/$defs/StoreEvent"
              },
              {
                "$ref": "#/$defs/ModelEvent"
              },
              {
                "$ref": "#/$defs/ToolEvent"
              },
              {
                "$ref": "#/$defs/ApprovalEvent"
              },
              {
                "$ref": "#/$defs/InputEvent"
              },
              {
                "$ref": "#/$defs/ScoreEvent"
              },
              {
                "$ref": "#/$defs/ErrorEvent"
              },
              {
                "$ref": "#/$defs/LoggerEvent"
              },
              {
                "$ref": "#/$defs/InfoEvent"
              },
              {
                "$ref": "#/$defs/StepEvent"
              },
              {
                "$ref": "#/$defs/SubtaskEvent"
              }
            ]
          },
          "title": "Events",
          "type": "array"
        }
      },
      "required": [
        "timestamp",
        "pending",
        "event",
        "type",
        "id",
        "function",
        "arguments",
        "view",
        "result",
        "truncated",
        "error",
        "events"
      ],
      "title": "ToolEvent",
      "type": "object",
      "additionalProperties": false
    },
    "ToolFunction": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "ToolFunction",
      "type": "object",
      "additionalProperties": false
    },
    "ToolInfo": {
      "description": "Specification of a tool (JSON Schema compatible)\n\nIf you are implementing a ModelAPI, most LLM libraries can\nbe passed this object (dumped to a dict) directly as a function\nspecification. For example, in the OpenAI provider:\n\n```python\nChatCompletionToolParam(\n    type=\"function\",\n    function=tool.model_dump(exclude_none=True),\n)\n```\n\nIn some cases the field names don't match up exactly. In that case\ncall `model_dump()` on the `parameters` field. For example, in the\nAnthropic provider:\n\n```python\nToolParam(\n    name=tool.name,\n    description=tool.description,\n    input_schema=tool.parameters.model_dump(exclude_none=True),\n)\n```",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/$defs/ToolParams"
        }
      },
      "required": [
        "name",
        "description",
        "parameters"
      ],
      "title": "ToolInfo",
      "type": "object",
      "additionalProperties": false
    },
    "ToolParam": {
      "description": "Description of tool parameter in JSON Schema format.",
      "properties": {
        "type": {
          "default": "null",
          "enum": [
            "string",
            "integer",
            "number",
            "boolean",
            "array",
            "object",
            "null"
          ],
          "title": "Type",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "default": {
          "default": null,
          "title": "Default"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolParam"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "properties": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/ToolParam"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Properties"
        },
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolParam"
            },
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Additionalproperties"
        },
        "anyOf": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolParam"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Anyof"
        },
        "required": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Required"
        }
      },
      "title": "ToolParam",
      "type": "object",
      "required": [
        "type",
        "description",
        "default",
        "items",
        "properties",
        "additionalProperties",
        "anyOf",
        "required"
      ],
      "additionalProperties": false
    },
    "ToolParams": {
      "description": "Description of tool parameters object in JSON Schema format.",
      "properties": {
        "type": {
          "const": "object",
          "default": "object",
          "enum": [
            "object"
          ],
          "title": "Type",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ToolParam"
          },
          "title": "Properties"
        },
        "required": {
          "items": {
            "type": "string"
          },
          "title": "Required",
          "type": "array"
        },
        "additionalProperties": {
          "default": false,
          "title": "Additionalproperties",
          "type": "boolean"
        }
      },
      "title": "ToolParams",
      "type": "object",
      "required": [
        "type",
        "properties",
        "required",
        "additionalProperties"
      ],
      "additionalProperties": false
    },
    "TopLogprob": {
      "description": "List of the most likely tokens and their log probability, at this token position.",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string"
        },
        "logprob": {
          "title": "Logprob",
          "type": "number"
        },
        "bytes": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bytes"
        }
      },
      "required": [
        "token",
        "logprob",
        "bytes"
      ],
      "title": "TopLogprob",
      "type": "object",
      "additionalProperties": false
    }
  },
  "properties": {
    "version": {
      "default": 2,
      "title": "Version",
      "type": "integer"
    },
    "status": {
      "default": "started",
      "enum": [
        "started",
        "success",
        "cancelled",
        "error"
      ],
      "title": "Status",
      "type": "string"
    },
    "eval": {
      "$ref": "#/$defs/EvalSpec"
    },
    "plan": {
      "$ref": "#/$defs/EvalPlan",
      "default": {
        "name": "plan",
        "steps": [],
        "finish": null,
        "config": {
          "best_of": null,
          "cache_prompt": null,
          "frequency_penalty": null,
          "logit_bias": null,
          "logprobs": null,
          "max_connections": null,
          "max_retries": null,
          "max_tokens": null,
          "max_tool_output": null,
          "num_choices": null,
          "parallel_tool_calls": null,
          "presence_penalty": null,
          "seed": null,
          "stop_seqs": null,
          "suffix": null,
          "system_message": null,
          "temperature": null,
          "timeout": null,
          "top_k": null,
          "top_logprobs": null,
          "top_p": null
        }
      }
    },
    "results": {
      "anyOf": [
        {
          "$ref": "#/$defs/EvalResults"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "stats": {
      "$ref": "#/$defs/EvalStats",
      "default": {
        "started_at": "",
        "completed_at": "",
        "model_usage": {}
      }
    },
    "error": {
      "anyOf": [
        {
          "$ref": "#/$defs/EvalError"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "samples": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/EvalSample"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Samples"
    },
    "reductions": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/EvalSampleReductions"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Reductions"
    },
    "location": {
      "title": "Location",
      "type": "string"
    }
  },
  "required": [
    "eval"
  ],
  "title": "EvalLog",
  "type": "object"
}